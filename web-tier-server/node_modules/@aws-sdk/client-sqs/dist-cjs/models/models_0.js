"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SendMessageResultFilterSensitiveLog = exports.SendMessageRequestFilterSensitiveLog = exports.MessageSystemAttributeValueFilterSensitiveLog = exports.RemovePermissionRequestFilterSensitiveLog = exports.ReceiveMessageResultFilterSensitiveLog = exports.MessageFilterSensitiveLog = exports.MessageAttributeValueFilterSensitiveLog = exports.ReceiveMessageRequestFilterSensitiveLog = exports.PurgeQueueRequestFilterSensitiveLog = exports.ListQueueTagsResultFilterSensitiveLog = exports.ListQueueTagsRequestFilterSensitiveLog = exports.ListQueuesResultFilterSensitiveLog = exports.ListQueuesRequestFilterSensitiveLog = exports.ListDeadLetterSourceQueuesResultFilterSensitiveLog = exports.ListDeadLetterSourceQueuesRequestFilterSensitiveLog = exports.GetQueueUrlResultFilterSensitiveLog = exports.GetQueueUrlRequestFilterSensitiveLog = exports.GetQueueAttributesResultFilterSensitiveLog = exports.GetQueueAttributesRequestFilterSensitiveLog = exports.DeleteQueueRequestFilterSensitiveLog = exports.DeleteMessageBatchResultFilterSensitiveLog = exports.DeleteMessageBatchResultEntryFilterSensitiveLog = exports.DeleteMessageBatchRequestFilterSensitiveLog = exports.DeleteMessageBatchRequestEntryFilterSensitiveLog = exports.DeleteMessageRequestFilterSensitiveLog = exports.CreateQueueResultFilterSensitiveLog = exports.CreateQueueRequestFilterSensitiveLog = exports.ChangeMessageVisibilityBatchResultFilterSensitiveLog = exports.ChangeMessageVisibilityBatchResultEntryFilterSensitiveLog = exports.BatchResultErrorEntryFilterSensitiveLog = exports.ChangeMessageVisibilityBatchRequestFilterSensitiveLog = exports.ChangeMessageVisibilityBatchRequestEntryFilterSensitiveLog = exports.ChangeMessageVisibilityRequestFilterSensitiveLog = exports.AddPermissionRequestFilterSensitiveLog = exports.BatchRequestTooLong = exports.UnsupportedOperation = exports.InvalidMessageContents = exports.PurgeQueueInProgress = exports.QueueDoesNotExist = exports.InvalidAttributeName = exports.InvalidIdFormat = exports.QueueNameExists = exports.QueueDeletedRecently = exports.TooManyEntriesInBatchRequest = exports.InvalidBatchEntryId = exports.EmptyBatchRequest = exports.BatchEntryIdsNotDistinct = exports.ReceiptHandleIsInvalid = exports.MessageNotInflight = exports.OverLimit = void 0;
exports.UntagQueueRequestFilterSensitiveLog = exports.TagQueueRequestFilterSensitiveLog = exports.SetQueueAttributesRequestFilterSensitiveLog = exports.SendMessageBatchResultFilterSensitiveLog = exports.SendMessageBatchResultEntryFilterSensitiveLog = exports.SendMessageBatchRequestFilterSensitiveLog = exports.SendMessageBatchRequestEntryFilterSensitiveLog = void 0;
const SQSServiceException_1 = require("./SQSServiceException");
class OverLimit extends SQSServiceException_1.SQSServiceException {
    constructor(opts) {
        super({
            name: "OverLimit",
            $fault: "client",
            ...opts,
        });
        this.name = "OverLimit";
        this.$fault = "client";
        Object.setPrototypeOf(this, OverLimit.prototype);
    }
}
exports.OverLimit = OverLimit;
class MessageNotInflight extends SQSServiceException_1.SQSServiceException {
    constructor(opts) {
        super({
            name: "MessageNotInflight",
            $fault: "client",
            ...opts,
        });
        this.name = "MessageNotInflight";
        this.$fault = "client";
        Object.setPrototypeOf(this, MessageNotInflight.prototype);
    }
}
exports.MessageNotInflight = MessageNotInflight;
class ReceiptHandleIsInvalid extends SQSServiceException_1.SQSServiceException {
    constructor(opts) {
        super({
            name: "ReceiptHandleIsInvalid",
            $fault: "client",
            ...opts,
        });
        this.name = "ReceiptHandleIsInvalid";
        this.$fault = "client";
        Object.setPrototypeOf(this, ReceiptHandleIsInvalid.prototype);
    }
}
exports.ReceiptHandleIsInvalid = ReceiptHandleIsInvalid;
class BatchEntryIdsNotDistinct extends SQSServiceException_1.SQSServiceException {
    constructor(opts) {
        super({
            name: "BatchEntryIdsNotDistinct",
            $fault: "client",
            ...opts,
        });
        this.name = "BatchEntryIdsNotDistinct";
        this.$fault = "client";
        Object.setPrototypeOf(this, BatchEntryIdsNotDistinct.prototype);
    }
}
exports.BatchEntryIdsNotDistinct = BatchEntryIdsNotDistinct;
class EmptyBatchRequest extends SQSServiceException_1.SQSServiceException {
    constructor(opts) {
        super({
            name: "EmptyBatchRequest",
            $fault: "client",
            ...opts,
        });
        this.name = "EmptyBatchRequest";
        this.$fault = "client";
        Object.setPrototypeOf(this, EmptyBatchRequest.prototype);
    }
}
exports.EmptyBatchRequest = EmptyBatchRequest;
class InvalidBatchEntryId extends SQSServiceException_1.SQSServiceException {
    constructor(opts) {
        super({
            name: "InvalidBatchEntryId",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidBatchEntryId";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidBatchEntryId.prototype);
    }
}
exports.InvalidBatchEntryId = InvalidBatchEntryId;
class TooManyEntriesInBatchRequest extends SQSServiceException_1.SQSServiceException {
    constructor(opts) {
        super({
            name: "TooManyEntriesInBatchRequest",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyEntriesInBatchRequest";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyEntriesInBatchRequest.prototype);
    }
}
exports.TooManyEntriesInBatchRequest = TooManyEntriesInBatchRequest;
class QueueDeletedRecently extends SQSServiceException_1.SQSServiceException {
    constructor(opts) {
        super({
            name: "QueueDeletedRecently",
            $fault: "client",
            ...opts,
        });
        this.name = "QueueDeletedRecently";
        this.$fault = "client";
        Object.setPrototypeOf(this, QueueDeletedRecently.prototype);
    }
}
exports.QueueDeletedRecently = QueueDeletedRecently;
class QueueNameExists extends SQSServiceException_1.SQSServiceException {
    constructor(opts) {
        super({
            name: "QueueNameExists",
            $fault: "client",
            ...opts,
        });
        this.name = "QueueNameExists";
        this.$fault = "client";
        Object.setPrototypeOf(this, QueueNameExists.prototype);
    }
}
exports.QueueNameExists = QueueNameExists;
class InvalidIdFormat extends SQSServiceException_1.SQSServiceException {
    constructor(opts) {
        super({
            name: "InvalidIdFormat",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidIdFormat";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidIdFormat.prototype);
    }
}
exports.InvalidIdFormat = InvalidIdFormat;
class InvalidAttributeName extends SQSServiceException_1.SQSServiceException {
    constructor(opts) {
        super({
            name: "InvalidAttributeName",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidAttributeName";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidAttributeName.prototype);
    }
}
exports.InvalidAttributeName = InvalidAttributeName;
class QueueDoesNotExist extends SQSServiceException_1.SQSServiceException {
    constructor(opts) {
        super({
            name: "QueueDoesNotExist",
            $fault: "client",
            ...opts,
        });
        this.name = "QueueDoesNotExist";
        this.$fault = "client";
        Object.setPrototypeOf(this, QueueDoesNotExist.prototype);
    }
}
exports.QueueDoesNotExist = QueueDoesNotExist;
class PurgeQueueInProgress extends SQSServiceException_1.SQSServiceException {
    constructor(opts) {
        super({
            name: "PurgeQueueInProgress",
            $fault: "client",
            ...opts,
        });
        this.name = "PurgeQueueInProgress";
        this.$fault = "client";
        Object.setPrototypeOf(this, PurgeQueueInProgress.prototype);
    }
}
exports.PurgeQueueInProgress = PurgeQueueInProgress;
class InvalidMessageContents extends SQSServiceException_1.SQSServiceException {
    constructor(opts) {
        super({
            name: "InvalidMessageContents",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidMessageContents";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidMessageContents.prototype);
    }
}
exports.InvalidMessageContents = InvalidMessageContents;
class UnsupportedOperation extends SQSServiceException_1.SQSServiceException {
    constructor(opts) {
        super({
            name: "UnsupportedOperation",
            $fault: "client",
            ...opts,
        });
        this.name = "UnsupportedOperation";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnsupportedOperation.prototype);
    }
}
exports.UnsupportedOperation = UnsupportedOperation;
class BatchRequestTooLong extends SQSServiceException_1.SQSServiceException {
    constructor(opts) {
        super({
            name: "BatchRequestTooLong",
            $fault: "client",
            ...opts,
        });
        this.name = "BatchRequestTooLong";
        this.$fault = "client";
        Object.setPrototypeOf(this, BatchRequestTooLong.prototype);
    }
}
exports.BatchRequestTooLong = BatchRequestTooLong;
const AddPermissionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AddPermissionRequestFilterSensitiveLog = AddPermissionRequestFilterSensitiveLog;
const ChangeMessageVisibilityRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ChangeMessageVisibilityRequestFilterSensitiveLog = ChangeMessageVisibilityRequestFilterSensitiveLog;
const ChangeMessageVisibilityBatchRequestEntryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ChangeMessageVisibilityBatchRequestEntryFilterSensitiveLog = ChangeMessageVisibilityBatchRequestEntryFilterSensitiveLog;
const ChangeMessageVisibilityBatchRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ChangeMessageVisibilityBatchRequestFilterSensitiveLog = ChangeMessageVisibilityBatchRequestFilterSensitiveLog;
const BatchResultErrorEntryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BatchResultErrorEntryFilterSensitiveLog = BatchResultErrorEntryFilterSensitiveLog;
const ChangeMessageVisibilityBatchResultEntryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ChangeMessageVisibilityBatchResultEntryFilterSensitiveLog = ChangeMessageVisibilityBatchResultEntryFilterSensitiveLog;
const ChangeMessageVisibilityBatchResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ChangeMessageVisibilityBatchResultFilterSensitiveLog = ChangeMessageVisibilityBatchResultFilterSensitiveLog;
const CreateQueueRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateQueueRequestFilterSensitiveLog = CreateQueueRequestFilterSensitiveLog;
const CreateQueueResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateQueueResultFilterSensitiveLog = CreateQueueResultFilterSensitiveLog;
const DeleteMessageRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteMessageRequestFilterSensitiveLog = DeleteMessageRequestFilterSensitiveLog;
const DeleteMessageBatchRequestEntryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteMessageBatchRequestEntryFilterSensitiveLog = DeleteMessageBatchRequestEntryFilterSensitiveLog;
const DeleteMessageBatchRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteMessageBatchRequestFilterSensitiveLog = DeleteMessageBatchRequestFilterSensitiveLog;
const DeleteMessageBatchResultEntryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteMessageBatchResultEntryFilterSensitiveLog = DeleteMessageBatchResultEntryFilterSensitiveLog;
const DeleteMessageBatchResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteMessageBatchResultFilterSensitiveLog = DeleteMessageBatchResultFilterSensitiveLog;
const DeleteQueueRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteQueueRequestFilterSensitiveLog = DeleteQueueRequestFilterSensitiveLog;
const GetQueueAttributesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetQueueAttributesRequestFilterSensitiveLog = GetQueueAttributesRequestFilterSensitiveLog;
const GetQueueAttributesResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetQueueAttributesResultFilterSensitiveLog = GetQueueAttributesResultFilterSensitiveLog;
const GetQueueUrlRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetQueueUrlRequestFilterSensitiveLog = GetQueueUrlRequestFilterSensitiveLog;
const GetQueueUrlResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetQueueUrlResultFilterSensitiveLog = GetQueueUrlResultFilterSensitiveLog;
const ListDeadLetterSourceQueuesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListDeadLetterSourceQueuesRequestFilterSensitiveLog = ListDeadLetterSourceQueuesRequestFilterSensitiveLog;
const ListDeadLetterSourceQueuesResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListDeadLetterSourceQueuesResultFilterSensitiveLog = ListDeadLetterSourceQueuesResultFilterSensitiveLog;
const ListQueuesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListQueuesRequestFilterSensitiveLog = ListQueuesRequestFilterSensitiveLog;
const ListQueuesResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListQueuesResultFilterSensitiveLog = ListQueuesResultFilterSensitiveLog;
const ListQueueTagsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListQueueTagsRequestFilterSensitiveLog = ListQueueTagsRequestFilterSensitiveLog;
const ListQueueTagsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListQueueTagsResultFilterSensitiveLog = ListQueueTagsResultFilterSensitiveLog;
const PurgeQueueRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PurgeQueueRequestFilterSensitiveLog = PurgeQueueRequestFilterSensitiveLog;
const ReceiveMessageRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReceiveMessageRequestFilterSensitiveLog = ReceiveMessageRequestFilterSensitiveLog;
const MessageAttributeValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.MessageAttributeValueFilterSensitiveLog = MessageAttributeValueFilterSensitiveLog;
const MessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.MessageFilterSensitiveLog = MessageFilterSensitiveLog;
const ReceiveMessageResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReceiveMessageResultFilterSensitiveLog = ReceiveMessageResultFilterSensitiveLog;
const RemovePermissionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RemovePermissionRequestFilterSensitiveLog = RemovePermissionRequestFilterSensitiveLog;
const MessageSystemAttributeValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.MessageSystemAttributeValueFilterSensitiveLog = MessageSystemAttributeValueFilterSensitiveLog;
const SendMessageRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SendMessageRequestFilterSensitiveLog = SendMessageRequestFilterSensitiveLog;
const SendMessageResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SendMessageResultFilterSensitiveLog = SendMessageResultFilterSensitiveLog;
const SendMessageBatchRequestEntryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SendMessageBatchRequestEntryFilterSensitiveLog = SendMessageBatchRequestEntryFilterSensitiveLog;
const SendMessageBatchRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SendMessageBatchRequestFilterSensitiveLog = SendMessageBatchRequestFilterSensitiveLog;
const SendMessageBatchResultEntryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SendMessageBatchResultEntryFilterSensitiveLog = SendMessageBatchResultEntryFilterSensitiveLog;
const SendMessageBatchResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SendMessageBatchResultFilterSensitiveLog = SendMessageBatchResultFilterSensitiveLog;
const SetQueueAttributesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SetQueueAttributesRequestFilterSensitiveLog = SetQueueAttributesRequestFilterSensitiveLog;
const TagQueueRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TagQueueRequestFilterSensitiveLog = TagQueueRequestFilterSensitiveLog;
const UntagQueueRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UntagQueueRequestFilterSensitiveLog = UntagQueueRequestFilterSensitiveLog;
